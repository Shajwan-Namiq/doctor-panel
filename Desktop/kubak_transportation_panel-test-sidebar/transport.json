{
  "openapi": "3.0.1",
  "info": {
    "title": "Transportation",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/address": {
      "get": {
        "tags": [
          "Address"
        ],
        "operationId": "GetAddressTitle",
        "parameters": [
          {
            "name": "Latitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Longitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "LanguageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/v1/cancelreason": {
      "get": {
        "tags": [
          "CancelReason"
        ],
        "operationId": "ListCancelReason",
        "parameters": [
          {
            "name": "RoleId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CancelReasonTranslationResponseDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "CancelReason"
        ],
        "operationId": "CreateCancelReason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCancelReasonRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelReasonDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/cancelreason/{id}": {
      "get": {
        "tags": [
          "CancelReason"
        ],
        "operationId": "GetCancelReason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "withLanguage",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CancelReasonDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "CancelReason"
        ],
        "operationId": "UpdateCancelReason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCancelReasonRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CancelReason"
        ],
        "operationId": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/chart": {
      "get": {
        "tags": [
          "Chart"
        ],
        "operationId": "GetTaskStatus",
        "parameters": [
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ServiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/StaticTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MonthlyChartResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/discountcode": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "operationId": "ListDiscountCodes",
        "parameters": [
          {
            "name": "SearchField",
            "in": "query",
            "description": "Allowed Values: Code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActiveCodesOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDescending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCodeDtoPaginatedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "DiscountCode"
        ],
        "operationId": "CreateDiscountCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDiscountCodeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCodeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/discountcode/{codeId}/users": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "operationId": "ListDiscountCodeUsers",
        "parameters": [
          {
            "name": "SearchField",
            "in": "query",
            "description": "Allowed Values: Name, Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDescending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "codeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCodeUserDtoPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/discountcode/{id}": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "operationId": "GetDiscountCodeDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCodeDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/discountcode/{codeId}": {
      "put": {
        "tags": [
          "DiscountCode"
        ],
        "operationId": "UpdateDiscountCode",
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiscountCodeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCodeDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/discountcode/{codeId}/deactivate": {
      "put": {
        "tags": [
          "DiscountCode"
        ],
        "operationId": "Deactivate",
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCodeDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v1/favorite": {
      "get": {
        "tags": [
          "Favorite"
        ],
        "operationId": "ListFavorite",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FavoriteDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Favorite"
        ],
        "operationId": "Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavoriteRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FavoriteDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v1/favorite/{id}": {
      "put": {
        "tags": [
          "Favorite"
        ],
        "operationId": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFavoriteRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FavoriteDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Favorite"
        ],
        "operationId": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FavoriteDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/group": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "GetAllGroups",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "CreateGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/group/{id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "GetGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v1/index/active-task": {
      "get": {
        "tags": [
          "Index"
        ],
        "operationId": "GetActiveTask",
        "parameters": [
          {
            "name": "RoleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ServiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/v1/member/count": {
      "get": {
        "tags": [
          "Member"
        ],
        "operationId": "GetMemberCount",
        "parameters": [
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMemberCountResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/request": {
      "get": {
        "tags": [
          "Request"
        ],
        "operationId": "ListRequests",
        "parameters": [
          {
            "name": "StartAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/RequestStatusEnum"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestResponsePaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/request/count": {
      "get": {
        "tags": [
          "Request"
        ],
        "operationId": "GetRequestCount",
        "parameters": [
          {
            "name": "StartAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/RequestStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestCountResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/request/last-hour": {
      "get": {
        "tags": [
          "Request"
        ],
        "operationId": "ListLastHoursRequest",
        "parameters": [
          {
            "name": "regionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/request/{id}": {
      "get": {
        "tags": [
          "Request"
        ],
        "operationId": "GetRequestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/request/{id}/servants/passive": {
      "get": {
        "tags": [
          "Request"
        ],
        "operationId": "GetRequestPassiveServant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestServantResponsePaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/request/{id}/servants/online": {
      "get": {
        "tags": [
          "Request"
        ],
        "operationId": "GetRequestOnlineServant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestServantResponsePaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/request/passengers": {
      "get": {
        "tags": [
          "Request"
        ],
        "operationId": "GetPassengers",
        "parameters": [
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDescending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDtoPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v1/request/new": {
      "post": {
        "tags": [
          "Request"
        ],
        "operationId": "NewRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRequestJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/servant": {
      "get": {
        "tags": [
          "Servant"
        ],
        "operationId": "ListServants",
        "parameters": [
          {
            "name": "SearchField",
            "in": "query",
            "description": "Allowed Values: \"Name\", \"NationalId\", \"PhoneNumber\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ServantStatusEnum"
            }
          },
          {
            "name": "SearchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncompleteOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDescending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServantsResponsePaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Servant"
        ],
        "operationId": "CreateServant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServantRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServantDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/servant/count": {
      "get": {
        "tags": [
          "Servant"
        ],
        "operationId": "GetServantCount",
        "parameters": [
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ServantStatusEnum"
            }
          },
          {
            "name": "SearchField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServantCountResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/servant/{id}": {
      "get": {
        "tags": [
          "Servant"
        ],
        "operationId": "GetServantById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServantDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Servant"
        ],
        "operationId": "UpdateServant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServantRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Servant"
        ],
        "operationId": "DeleteServant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/servant/{id}/performance": {
      "get": {
        "tags": [
          "Servant"
        ],
        "operationId": "ServantPerformance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServantPerformanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/servant/ranking": {
      "get": {
        "tags": [
          "Servant"
        ],
        "operationId": "ListServantPerformances",
        "parameters": [
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDescending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServantsPerformancesResponsePaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/servant/{id}/online-periods": {
      "get": {
        "tags": [
          "Servant"
        ],
        "operationId": "GetServantOnlinePeriods",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ExcludeStartHour",
            "in": "query",
            "schema": {
              "maximum": 24,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExcludeEndHour",
            "in": "query",
            "schema": {
              "maximum": 24,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServantOnlinePeriod"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/servant/online-history": {
      "get": {
        "tags": [
          "Servant"
        ],
        "operationId": "ListServantsOnlineHistory",
        "parameters": [
          {
            "name": "ServantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ExcludeStartHour",
            "in": "query",
            "schema": {
              "maximum": 24,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExcludeEndHour",
            "in": "query",
            "schema": {
              "maximum": 24,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MinHours",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServantOnlineHistoryResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/servant/hourly-statistics": {
      "get": {
        "tags": [
          "Servant"
        ],
        "operationId": "GetServantHourlyStats",
        "parameters": [
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ServiceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServantHourlyStatsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/servant/{id}/change-status": {
      "put": {
        "tags": [
          "Servant"
        ],
        "operationId": "ChangeServantStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeServantStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/service": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "ListServices",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Service"
        ],
        "operationId": "CreateService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/service/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "GetServiceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Service"
        ],
        "operationId": "UpdateService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAreaTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/service/active/{serviceId}": {
      "post": {
        "tags": [
          "Service"
        ],
        "operationId": "CreateServiceAreaType",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceAreaTypeRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAreaTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/service/active/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "GetServiceAreaTypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAreaTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/service/{serviceId}/active/{id}": {
      "put": {
        "tags": [
          "Service"
        ],
        "operationId": "UpdateServiceAreaType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceAreaTypeRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAreaTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/service/active/{id}/commission": {
      "put": {
        "tags": [
          "Service"
        ],
        "operationId": "UpdateCommission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommissionRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/service/active/{id}/discount": {
      "put": {
        "tags": [
          "Service"
        ],
        "operationId": "UpdateDiscount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDiscountRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v1/service/details": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "GetActiveServiceByLocation",
        "parameters": [
          {
            "name": "Latitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Longitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "ServiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v1/service/services-subscribed": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "GetServiceAreaTypeByServant",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAreaTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nullable"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v1/service/active": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "GetServiceByRole",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/v1/service-base-type": {
      "get": {
        "tags": [
          "ServiceBaseType"
        ],
        "operationId": "GetAllServicesBaseTypesDto",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceBaseTypeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ServiceBaseType"
        ],
        "operationId": "CreateServiceBaseType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBaseTypeRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/service-base-type/{id}": {
      "get": {
        "tags": [
          "ServiceBaseType"
        ],
        "operationId": "GetServiceBaseTypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceBaseTypeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ServiceBaseType"
        ],
        "operationId": "UpdateServiceBaseType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBaseTypeRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAreaTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ServiceBaseType"
        ],
        "operationId": "DeleteBaseType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/task": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "ListTasks",
        "parameters": [
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TaskStatusEnum"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTaskResponsePaginatedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/task/count": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "GetTaskCount",
        "parameters": [
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TaskStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskCountResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "GetTaskDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailResponsePaginatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/api/v1/task/client/{clientId}": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "ListTasksByClient",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeRequest",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeServant",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TaskStatusEnum"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksDtoPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/task/canceled-task": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "ListCanceledTasks",
        "parameters": [
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDescending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CanceledTaskResponsePaginatedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/task/hourly-statistics": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "GetTasksHourlyStats",
        "parameters": [
          {
            "name": "StartAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "RegionId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HourlyStatisticResponsePaginatedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/user/{phone}/exists": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "IsUserExist",
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeServant",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByPhoneNumberResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/user": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "GetAll",
        "parameters": [
          {
            "name": "RoleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDescending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDtoPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/user/count": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "GetUsersCount",
        "parameters": [
          {
            "name": "RegionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RoleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserCountResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/user/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "GetUserProfile",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "UpdateProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/user/{id}/roles": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "UpdateRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRolesRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v1/user/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "GetClientProfile",
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/vehicle": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "operationId": "ListVehicles",
        "parameters": [
          {
            "name": "SearchField",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ListVehicleRequestFilterField"
            }
          },
          {
            "name": "SearchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDescending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleDtoPaginatedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Vehicle"
        ],
        "operationId": "CreateVehicle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVehicleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/vehicle/{id}": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "operationId": "GetVehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Vehicle"
        ],
        "operationId": "UpdateVehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Vehicle"
        ],
        "operationId": "DeleteVehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/api/v1/vehicle/{id}/servant": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "operationId": "GetVehicleServant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServantDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BaseNightPeriod": {
        "type": "object",
        "properties": {
          "BaseNightStart": {
            "type": "number",
            "format": "double"
          },
          "BaseNightEnd": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BaseNightPeriodsDto": {
        "type": "object",
        "properties": {
          "BaseNightStart": {
            "type": "number",
            "format": "double"
          },
          "BaseNightEnd": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BaseParams": {
        "type": "object",
        "properties": {
          "BasePrice": {
            "type": "number",
            "format": "double"
          },
          "BaseTime": {
            "type": "number",
            "format": "double"
          },
          "BaseStop": {
            "type": "number",
            "format": "double"
          },
          "BaseStopTime": {
            "type": "number",
            "format": "double"
          },
          "BaseDistance": {
            "type": "number",
            "format": "double"
          },
          "MinPrice": {
            "type": "number",
            "format": "double"
          },
          "Tip": {
            "type": "number",
            "format": "double"
          },
          "MinTip": {
            "type": "number",
            "format": "double"
          },
          "MaxTip": {
            "type": "number",
            "format": "double"
          },
          "BaseNight": {
            "type": "number",
            "format": "double"
          },
          "BaseNightPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseNightPeriod"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseTypeLanguageRequest": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "nullable": true
          },
          "LanguageId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BasicErrorResponse": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "nullable": true
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CancelReasonDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "RoleId": {
            "type": "integer",
            "format": "int32"
          },
          "CancelReasonTranslations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancelReasonTranslationDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelReasonTranslationDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Language": {
            "$ref": "#/components/schemas/LanguageDto"
          },
          "Title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelReasonTranslationResponseDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelTranslationTitles": {
        "required": [
          "Title"
        ],
        "type": "object",
        "properties": {
          "LanguageId": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CanceledTaskResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Region": {
            "type": "string",
            "nullable": true
          },
          "CanceledBy": {
            "type": "string",
            "nullable": true
          },
          "CancelReason": {
            "type": "string",
            "nullable": true
          },
          "Price": {
            "type": "number",
            "format": "double"
          },
          "Servant": {
            "$ref": "#/components/schemas/ServantResponse"
          },
          "Member": {
            "$ref": "#/components/schemas/MemberResponse"
          }
        },
        "additionalProperties": false
      },
      "CanceledTaskResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CanceledTaskResponse"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeServantStatusRequest": {
        "type": "object",
        "properties": {
          "Status": {
            "$ref": "#/components/schemas/ServantStatusEnum"
          }
        },
        "additionalProperties": false
      },
      "CommissionDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Value": {
            "type": "number",
            "format": "double"
          },
          "IsWithdrawFromGift": {
            "type": "boolean"
          },
          "ServiceAreaType": {
            "$ref": "#/components/schemas/ServiceAreaTypeDto"
          }
        },
        "additionalProperties": false
      },
      "Coordinate": {
        "type": "object",
        "properties": {
          "X": {
            "type": "number",
            "format": "double"
          },
          "Y": {
            "type": "number",
            "format": "double"
          },
          "Z": {
            "type": "number",
            "format": "double"
          },
          "M": {
            "type": "number",
            "format": "double"
          },
          "CoordinateValue": {
            "$ref": "#/components/schemas/Coordinate"
          }
        },
        "additionalProperties": false
      },
      "CoordinateSequence": {
        "type": "object",
        "properties": {
          "Dimension": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Measures": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Spatial": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Ordinates": {
            "$ref": "#/components/schemas/Ordinates"
          },
          "HasZ": {
            "type": "boolean",
            "readOnly": true
          },
          "HasM": {
            "type": "boolean",
            "readOnly": true
          },
          "ZOrdinateIndex": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "MOrdinateIndex": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CoordinateSequenceFactory": {
        "type": "object",
        "properties": {
          "Ordinates": {
            "$ref": "#/components/schemas/Ordinates"
          }
        },
        "additionalProperties": false
      },
      "CountryDto": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "nullable": true
          },
          "CountryLanguages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryLanguageDto"
            },
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryLanguageDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "LanguageDto": {
            "$ref": "#/components/schemas/LanguageDto"
          }
        },
        "additionalProperties": false
      },
      "CreateBaseTypeRequest": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "nullable": true
          },
          "ServiceBaseTypeLanguages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseTypeLanguageRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCancelReasonRequest": {
        "type": "object",
        "properties": {
          "RoleId": {
            "type": "integer",
            "format": "int32"
          },
          "CancelReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancelTranslationTitles"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCommissionRequest": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "number",
            "format": "double"
          },
          "IsWithdrawFromGift": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateDiscountCodeRequest": {
        "required": [
          "Code",
          "CuRegionId",
          "ExpireAt",
          "IsHidden",
          "StartAt",
          "Steps",
          "Type",
          "UsageLimit",
          "Value"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "minLength": 4,
            "type": "string"
          },
          "Value": {
            "type": "number",
            "format": "double"
          },
          "Type": {
            "$ref": "#/components/schemas/DiscountCodeTypeEnum"
          },
          "Steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountCodeStepRequest"
            }
          },
          "CuRegionId": {
            "type": "integer",
            "format": "int32"
          },
          "UsageLimit": {
            "type": "integer",
            "format": "int32"
          },
          "StartAt": {
            "type": "string",
            "format": "date-time"
          },
          "ExpireAt": {
            "type": "string",
            "format": "date-time"
          },
          "IsHidden": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateDiscountRequest": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "number",
            "format": "double"
          },
          "Max": {
            "type": "integer",
            "format": "int32"
          },
          "Limit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartAt": {
            "type": "string",
            "format": "time",
            "example": "13:45:42.0000000"
          },
          "EndAt": {
            "type": "string",
            "format": "time",
            "example": "13:45:42.0000000"
          }
        },
        "additionalProperties": false
      },
      "CreateFavoriteRequest": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Icon": {
            "type": "string",
            "nullable": true
          },
          "Lat": {
            "type": "number",
            "format": "double"
          },
          "Long": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateGroupRequest": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrUpdatePlaqueRequest": {
        "type": "object",
        "properties": {
          "City": {
            "type": "string",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "nullable": true
          },
          "Color": {
            "type": "string",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateServantRequest": {
        "type": "object",
        "properties": {
          "UserId": {
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "NationalId": {
            "type": "string",
            "nullable": true
          },
          "CertificateId": {
            "type": "string",
            "nullable": true
          },
          "BankId": {
            "type": "string",
            "nullable": true
          },
          "Avatar": {
            "type": "string",
            "nullable": true
          },
          "Certificate": {
            "type": "string",
            "nullable": true
          },
          "CertificateBack": {
            "type": "string",
            "nullable": true
          },
          "NationalCard": {
            "type": "string",
            "nullable": true
          },
          "NationalCardBack": {
            "type": "string",
            "nullable": true
          },
          "CuRegionId": {
            "type": "integer",
            "format": "int32"
          },
          "ServiceAreaTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateServiceAreaTypeRequest": {
        "required": [
          "BaseTypeId",
          "CuRegionId"
        ],
        "type": "object",
        "properties": {
          "CuRegionId": {
            "type": "integer",
            "format": "int32"
          },
          "BaseTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Icon": {
            "type": "string",
            "nullable": true
          },
          "BasePrice": {
            "type": "number",
            "format": "double"
          },
          "BaseTime": {
            "type": "number",
            "format": "double"
          },
          "BaseStop": {
            "type": "number",
            "format": "double"
          },
          "BaseStopTime": {
            "type": "number",
            "format": "double"
          },
          "BaseDistance": {
            "type": "number",
            "format": "double"
          },
          "MinPrice": {
            "type": "number",
            "format": "double"
          },
          "Tip": {
            "type": "number",
            "format": "double"
          },
          "MinTip": {
            "type": "number",
            "format": "double"
          },
          "MaxTip": {
            "type": "number",
            "format": "double"
          },
          "BaseNight": {
            "type": "number",
            "format": "double"
          },
          "BaseNightPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseNightPeriod"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateServiceRequest": {
        "required": [
          "Title"
        ],
        "type": "object",
        "properties": {
          "Title": {
            "minLength": 1,
            "type": "string"
          },
          "Icon": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "Uid": {
            "type": "string",
            "nullable": true
          },
          "DisplayName": {
            "type": "string",
            "description": "Gets the user's display name, if available. Otherwise null.",
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "description": "Gets User's mobile number.\r\nIf not available, null.",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Gets the user's email address, if available. Otherwise null.",
            "nullable": true
          },
          "PhotoUrl": {
            "type": "string",
            "description": "Gets the user's photo URL, if available. Otherwise null.",
            "nullable": true
          },
          "EmailVerified": {
            "type": "boolean",
            "description": "Gets a value indicating whether the user's email address is verified or not.",
            "nullable": true
          },
          "Disabled": {
            "type": "boolean",
            "description": "Gets a value indicating whether the user account is disabled or not.",
            "nullable": true
          },
          "Roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "GenderId": {
            "type": "integer",
            "format": "int32"
          },
          "LanguageId": {
            "type": "integer",
            "format": "int32"
          },
          "CuRegionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateVehicleRequest": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Color": {
            "type": "string",
            "nullable": true
          },
          "Model": {
            "type": "integer",
            "format": "int32"
          },
          "Tip": {
            "type": "string",
            "nullable": true
          },
          "InsuranceNo": {
            "type": "string",
            "nullable": true
          },
          "InsuranceExpire": {
            "type": "string",
            "format": "date"
          },
          "Vin": {
            "type": "string",
            "nullable": true
          },
          "CarCard": {
            "type": "string",
            "nullable": true
          },
          "CarCardBack": {
            "type": "string",
            "nullable": true
          },
          "Insurance": {
            "type": "string",
            "nullable": true
          },
          "TechDiagnosis": {
            "type": "string",
            "nullable": true
          },
          "ServantId": {
            "type": "integer",
            "format": "int32"
          },
          "Plaque": {
            "$ref": "#/components/schemas/CreateOrUpdatePlaqueRequest"
          }
        },
        "additionalProperties": false
      },
      "DestinationDto": {
        "type": "object",
        "properties": {
          "X": {
            "type": "number",
            "format": "double"
          },
          "Y": {
            "type": "number",
            "format": "double"
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Price": {
            "type": "integer",
            "format": "int32"
          },
          "Distance": {
            "type": "integer",
            "format": "int32"
          },
          "Duration": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "$ref": "#/components/schemas/DestinationStatusEnum"
          },
          "Step": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DestinationStatusEnum": {
        "enum": [
          "Active",
          "Switched",
          "SwitchedDestination",
          "Stop",
          "Arrived",
          "Canceled"
        ],
        "type": "string"
      },
      "Dimension": {
        "enum": [
          "Point",
          "Curve",
          "Surface",
          "Dontcare",
          "True",
          "False"
        ],
        "type": "string"
      },
      "DiscountCodeDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "number",
            "format": "double"
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "UsageLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IsHidden": {
            "type": "boolean"
          },
          "IsActive": {
            "type": "boolean"
          },
          "StartAt": {
            "type": "string",
            "format": "date-time"
          },
          "ExpireAt": {
            "type": "string",
            "format": "date-time"
          },
          "Steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountCodeStepDto"
            },
            "nullable": true
          },
          "Region": {
            "$ref": "#/components/schemas/RegionDto"
          }
        },
        "additionalProperties": false
      },
      "DiscountCodeDtoPaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountCodeDto"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountCodeStepDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Step": {
            "type": "integer",
            "format": "int32"
          },
          "Value": {
            "type": "number",
            "format": "float"
          },
          "Max": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DiscountCodeStepRequest": {
        "type": "object",
        "properties": {
          "Step": {
            "type": "integer",
            "format": "int32"
          },
          "Value": {
            "type": "number",
            "format": "float"
          },
          "Max": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DiscountCodeTypeEnum": {
        "enum": [
          "Percent",
          "Value"
        ],
        "type": "string"
      },
      "DiscountCodeUserDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          },
          "DiscountCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "type": "string",
            "nullable": true
          },
          "DiscountCode": {
            "$ref": "#/components/schemas/DiscountCodeDto"
          },
          "User": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "additionalProperties": false
      },
      "DiscountCodeUserDtoPaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountCodeUserDto"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Value": {
            "type": "number",
            "format": "double"
          },
          "Max": {
            "type": "integer",
            "format": "int32"
          },
          "Limit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountPeriodsDto"
            },
            "nullable": true
          },
          "ServiceAreaType": {
            "$ref": "#/components/schemas/ServiceAreaTypeDto"
          }
        },
        "additionalProperties": false
      },
      "DiscountPeriodsDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "example": "13:45:42.0000000"
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "example": "13:45:42.0000000"
          }
        },
        "additionalProperties": false
      },
      "Envelope": {
        "type": "object",
        "properties": {
          "IsNull": {
            "type": "boolean",
            "readOnly": true
          },
          "Width": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Height": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "MinX": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "MaxX": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "MinY": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "MaxY": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Area": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "MinExtent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "MaxExtent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Centre": {
            "$ref": "#/components/schemas/Coordinate"
          }
        },
        "additionalProperties": false
      },
      "FavoriteDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Icon": {
            "type": "string",
            "nullable": true
          },
          "Lat": {
            "type": "number",
            "format": "double"
          },
          "Long": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GenderDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Geometry": {
        "type": "object",
        "properties": {
          "Factory": {
            "$ref": "#/components/schemas/GeometryFactory"
          },
          "UserData": {
            "nullable": true
          },
          "SRID": {
            "type": "integer",
            "format": "int32"
          },
          "GeometryType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OgcGeometryType": {
            "$ref": "#/components/schemas/OgcGeometryType"
          },
          "PrecisionModel": {
            "$ref": "#/components/schemas/PrecisionModel"
          },
          "Coordinate": {
            "$ref": "#/components/schemas/Coordinate"
          },
          "Coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coordinate"
            },
            "nullable": true,
            "readOnly": true
          },
          "NumPoints": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "NumGeometries": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "IsSimple": {
            "type": "boolean",
            "readOnly": true
          },
          "IsValid": {
            "type": "boolean",
            "readOnly": true
          },
          "IsEmpty": {
            "type": "boolean",
            "readOnly": true
          },
          "Area": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Length": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Centroid": {
            "$ref": "#/components/schemas/Point"
          },
          "InteriorPoint": {
            "$ref": "#/components/schemas/Point"
          },
          "PointOnSurface": {
            "$ref": "#/components/schemas/Point"
          },
          "Dimension": {
            "$ref": "#/components/schemas/Dimension"
          },
          "Boundary": {
            "$ref": "#/components/schemas/Geometry"
          },
          "BoundaryDimension": {
            "$ref": "#/components/schemas/Dimension"
          },
          "Envelope": {
            "$ref": "#/components/schemas/Geometry"
          },
          "EnvelopeInternal": {
            "$ref": "#/components/schemas/Envelope"
          },
          "IsRectangle": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GeometryFactory": {
        "type": "object",
        "properties": {
          "PrecisionModel": {
            "$ref": "#/components/schemas/PrecisionModel"
          },
          "CoordinateSequenceFactory": {
            "$ref": "#/components/schemas/CoordinateSequenceFactory"
          },
          "SRID": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetMemberCountResponse": {
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetRequestCountResponse": {
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetServantCountResponse": {
        "type": "object",
        "properties": {
          "ServantCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetTaskCountResponse": {
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetUserByPhoneNumberResponse": {
        "type": "object",
        "properties": {
          "IsUser": {
            "type": "boolean"
          },
          "User": {
            "$ref": "#/components/schemas/UserDto"
          },
          "IsServant": {
            "type": "boolean"
          },
          "Servant": {
            "$ref": "#/components/schemas/ServantDto"
          }
        },
        "additionalProperties": false
      },
      "GetUserCountResponse": {
        "type": "object",
        "properties": {
          "UserCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GroupDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HourlyStatisticResponse": {
        "type": "object",
        "properties": {
          "Date": {
            "type": "string",
            "format": "date"
          },
          "Hours": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HourlyStatisticResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HourlyStatisticResponse"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LanguageDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Locale": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListServantsPerformancesResponse": {
        "type": "object",
        "properties": {
          "Servant": {
            "$ref": "#/components/schemas/ServantDto"
          },
          "SuccessTasks": {
            "type": "integer",
            "format": "int32"
          },
          "Rating": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListServantsPerformancesResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListServantsPerformancesResponse"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListServantsResponse": {
        "type": "object",
        "properties": {
          "Servant": {
            "$ref": "#/components/schemas/ServantDto"
          },
          "ServantScore": {
            "$ref": "#/components/schemas/ServantScoreDto"
          },
          "ServantStatus": {
            "$ref": "#/components/schemas/ServantStatusDto"
          }
        },
        "additionalProperties": false
      },
      "ListServantsResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListServantsResponse"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListTaskResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "RequestId": {
            "type": "integer",
            "format": "int32"
          },
          "Price": {
            "type": "integer",
            "format": "int32"
          },
          "Tip": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "$ref": "#/components/schemas/TaskStatusEnum"
          },
          "CreatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Distance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Duration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Servant": {
            "$ref": "#/components/schemas/ServantResponse"
          },
          "Member": {
            "$ref": "#/components/schemas/MemberResponse"
          }
        },
        "additionalProperties": false
      },
      "ListTaskResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListTaskResponse"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListVehicleRequestFilterField": {
        "enum": [
          "Id",
          "Title",
          "PlateNumber",
          "Vin"
        ],
        "type": "string"
      },
      "Location": {
        "type": "object",
        "properties": {
          "X": {
            "type": "number",
            "format": "double"
          },
          "Y": {
            "type": "number",
            "format": "double"
          },
          "Address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationPoint": {
        "type": "object",
        "properties": {
          "Lat": {
            "type": "number",
            "format": "double"
          },
          "Long": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "MemberDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Price": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "type": "integer",
            "description": "1 => active, 0 => deactive",
            "format": "int32"
          },
          "Location": {
            "$ref": "#/components/schemas/Point"
          },
          "Task": {
            "$ref": "#/components/schemas/TasksDto"
          },
          "User": {
            "$ref": "#/components/schemas/UserDto"
          },
          "MemberPaymentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberPaymentTypeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberPaymentTypeDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Type": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MemberResponse": {
        "type": "object",
        "properties": {
          "X": {
            "type": "number",
            "format": "double"
          },
          "Y": {
            "type": "number",
            "format": "double"
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MonthlyChartResponse": {
        "type": "object",
        "properties": {
          "Year": {
            "type": "integer",
            "format": "int32"
          },
          "Month": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Requests": {
            "type": "integer",
            "format": "int64"
          },
          "NoServantRequests": {
            "type": "integer",
            "format": "int64"
          },
          "NoAcceptRequests": {
            "type": "integer",
            "format": "int64"
          },
          "SuccessTasks": {
            "type": "integer",
            "format": "int64"
          },
          "CanceledTasks": {
            "type": "integer",
            "format": "int64"
          },
          "OnlineServants": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "NewRequestJobRequest": {
        "type": "object",
        "properties": {
          "ServiceAreaTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Origin": {
            "$ref": "#/components/schemas/LocationPoint"
          },
          "Destination": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationPoint"
            },
            "nullable": true
          },
          "CurrentLocation": {
            "$ref": "#/components/schemas/LocationPoint"
          },
          "DiscountCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PriceDifference": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Nullable": {
        "type": "object",
        "additionalProperties": false
      },
      "OgcGeometryType": {
        "enum": [
          "Point",
          "LineString",
          "Polygon",
          "MultiPoint",
          "MultiLineString",
          "MultiPolygon",
          "GeometryCollection",
          "CircularString",
          "CompoundCurve",
          "CurvePolygon",
          "MultiCurve",
          "MultiSurface",
          "Curve",
          "Surface",
          "PolyhedralSurface",
          "TIN"
        ],
        "type": "string"
      },
      "Ordinates": {
        "enum": [
          "None",
          "X",
          "Y",
          "XY",
          "Spatial3",
          "XYZ",
          "Spatial4",
          "Spatial5",
          "Spatial6",
          "Spatial7",
          "Spatial8",
          "Spatial9",
          "Spatial10",
          "Spatial11",
          "Spatial12",
          "Spatial13",
          "Spatial14",
          "Spatial15",
          "Spatial16",
          "AllSpatialOrdinates",
          "Measure1",
          "XYM",
          "XYZM",
          "Measure2",
          "Measure3",
          "Measure4",
          "Measure5",
          "Measure6",
          "Measure7",
          "Measure8",
          "Measure9",
          "Measure10",
          "Measure11",
          "Measure12",
          "Measure13",
          "Measure14",
          "Measure15",
          "Measure16",
          "AllMeasureOrdinates",
          "AllOrdinates"
        ],
        "type": "string"
      },
      "PlaqueDetailDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "City": {
            "type": "string",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "nullable": true
          },
          "Color": {
            "type": "string",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Point": {
        "type": "object",
        "properties": {
          "Factory": {
            "$ref": "#/components/schemas/GeometryFactory"
          },
          "UserData": {
            "nullable": true
          },
          "SRID": {
            "type": "integer",
            "format": "int32"
          },
          "PrecisionModel": {
            "$ref": "#/components/schemas/PrecisionModel"
          },
          "NumGeometries": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "IsSimple": {
            "type": "boolean",
            "readOnly": true
          },
          "IsValid": {
            "type": "boolean",
            "readOnly": true
          },
          "Area": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Length": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Centroid": {
            "$ref": "#/components/schemas/Point"
          },
          "InteriorPoint": {
            "$ref": "#/components/schemas/Point"
          },
          "PointOnSurface": {
            "$ref": "#/components/schemas/Point"
          },
          "Envelope": {
            "$ref": "#/components/schemas/Geometry"
          },
          "EnvelopeInternal": {
            "$ref": "#/components/schemas/Envelope"
          },
          "IsRectangle": {
            "type": "boolean",
            "readOnly": true
          },
          "CoordinateSequence": {
            "$ref": "#/components/schemas/CoordinateSequence"
          },
          "Coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coordinate"
            },
            "nullable": true,
            "readOnly": true
          },
          "NumPoints": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "IsEmpty": {
            "type": "boolean",
            "readOnly": true
          },
          "Dimension": {
            "$ref": "#/components/schemas/Dimension"
          },
          "BoundaryDimension": {
            "$ref": "#/components/schemas/Dimension"
          },
          "X": {
            "type": "number",
            "format": "double"
          },
          "Y": {
            "type": "number",
            "format": "double"
          },
          "Coordinate": {
            "$ref": "#/components/schemas/Coordinate"
          },
          "GeometryType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OgcGeometryType": {
            "$ref": "#/components/schemas/OgcGeometryType"
          },
          "Boundary": {
            "$ref": "#/components/schemas/Geometry"
          },
          "Z": {
            "type": "number",
            "format": "double"
          },
          "M": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PolicyDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrecisionModel": {
        "type": "object",
        "properties": {
          "IsFloating": {
            "type": "boolean",
            "readOnly": true
          },
          "MaximumSignificantDigits": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Scale": {
            "type": "number",
            "format": "double"
          },
          "PrecisionModelType": {
            "$ref": "#/components/schemas/PrecisionModels"
          }
        },
        "additionalProperties": false
      },
      "PrecisionModels": {
        "enum": [
          "Floating",
          "FloatingSingle",
          "Fixed"
        ],
        "type": "string"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "RegionDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "nullable": true
          },
          "Country": {
            "$ref": "#/components/schemas/CountryDto"
          },
          "RegionLanguages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionLanguageDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionLanguageDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "LanguageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ServiceAreaTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "ReserveTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "KubakPrice": {
            "type": "integer",
            "format": "int32"
          },
          "UserPrice": {
            "type": "integer",
            "format": "int32"
          },
          "Discount": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "$ref": "#/components/schemas/RequestTypeEnum"
          },
          "Status": {
            "$ref": "#/components/schemas/RequestStatusEnum"
          },
          "ServiceAreaType": {
            "$ref": "#/components/schemas/ServiceAreaTypeDto"
          },
          "Task": {
            "$ref": "#/components/schemas/TasksDto"
          },
          "Requester": {
            "$ref": "#/components/schemas/MemberDto"
          },
          "Destination": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "KubakPrice": {
            "type": "number",
            "format": "double"
          },
          "UserPrice": {
            "type": "number",
            "format": "double"
          },
          "Type": {
            "$ref": "#/components/schemas/RequestTypeEnum"
          },
          "Status": {
            "$ref": "#/components/schemas/RequestStatusEnum"
          },
          "Requester": {
            "$ref": "#/components/schemas/MemberResponse"
          }
        },
        "additionalProperties": false
      },
      "RequestResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestResponse"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestServantResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "Distance": {
            "type": "integer",
            "format": "int32"
          },
          "Mobile": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestServantResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestServantResponse"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestStatusEnum": {
        "enum": [
          "Negatives",
          "Waiting",
          "Reserve",
          "Doing",
          "Complete"
        ],
        "type": "string"
      },
      "RequestTypeEnum": {
        "enum": [
          "WithDestination",
          "WithOutDestination"
        ],
        "type": "string"
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyDto"
            },
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ServantDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "NationalId": {
            "type": "string",
            "nullable": true
          },
          "CertificateId": {
            "type": "string",
            "nullable": true
          },
          "BankId": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "nullable": true
          },
          "Avatar": {
            "type": "string",
            "nullable": true
          },
          "Certificate": {
            "type": "string",
            "nullable": true
          },
          "CertificateBack": {
            "type": "string",
            "nullable": true
          },
          "NationalCard": {
            "type": "string",
            "nullable": true
          },
          "NationalCardBack": {
            "type": "string",
            "nullable": true
          },
          "Region": {
            "$ref": "#/components/schemas/RegionDto"
          },
          "User": {
            "$ref": "#/components/schemas/UserDto"
          },
          "ServantScore": {
            "$ref": "#/components/schemas/ServantScoreDto"
          },
          "ServantStatus": {
            "$ref": "#/components/schemas/ServantStatusDto"
          },
          "Vehicle": {
            "$ref": "#/components/schemas/VehicleDto"
          },
          "ServiceAreaTypeResponse": {
            "$ref": "#/components/schemas/ServiceAreaTypeResponse"
          }
        },
        "additionalProperties": false
      },
      "ServantHourlyStatsResponse": {
        "type": "object",
        "properties": {
          "Day": {
            "type": "string",
            "format": "date"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServantStats"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServantOnlineHistoryResponse": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "OnlineHours": {
            "type": "string",
            "nullable": true
          },
          "TotalTimeInSeconds": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServantOnlinePeriod": {
        "type": "object",
        "properties": {
          "TotalOnlineTime": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "Date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServantOnlinePeriodItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServantOnlinePeriodItem": {
        "type": "object",
        "properties": {
          "StartAt": {
            "type": "string",
            "format": "date-time"
          },
          "EndAt": {
            "type": "string",
            "format": "date-time"
          },
          "DiffInTime": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "TotalPeriodInSeconds": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ServantPerformanceResponse": {
        "type": "object",
        "properties": {
          "DeliveredRequests": {
            "type": "integer",
            "format": "int32"
          },
          "RejectedRequests": {
            "type": "integer",
            "format": "int32"
          },
          "AcceptedRequests": {
            "type": "integer",
            "format": "int32"
          },
          "SuccessTasks": {
            "type": "integer",
            "format": "int32"
          },
          "RejectedTasks": {
            "type": "integer",
            "format": "int32"
          },
          "OnlineDurations": {
            "type": "integer",
            "format": "int32"
          },
          "DurationOnTasks": {
            "type": "integer",
            "format": "int32"
          },
          "DistanceOnTasks": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServantResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServantScoreDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Score": {
            "type": "number",
            "format": "double"
          },
          "ServantId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServantStats": {
        "type": "object",
        "properties": {
          "Hour": {
            "type": "integer",
            "format": "int32"
          },
          "OnlineServants": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServantStatusDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "nullable": true
          },
          "Lat": {
            "type": "number",
            "format": "double"
          },
          "Lng": {
            "type": "number",
            "format": "double"
          },
          "ServantId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServantStatusEnum": {
        "enum": [
          "Online",
          "Offline",
          "Block"
        ],
        "type": "string"
      },
      "ServiceAreaParamsDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "BasePrice": {
            "type": "number",
            "format": "double"
          },
          "BaseTime": {
            "type": "number",
            "format": "double"
          },
          "BaseStop": {
            "type": "number",
            "format": "double"
          },
          "BaseStopTime": {
            "type": "number",
            "format": "double"
          },
          "BaseDistance": {
            "type": "number",
            "format": "double"
          },
          "MinPrice": {
            "type": "number",
            "format": "double"
          },
          "BaseNight": {
            "type": "number",
            "format": "double"
          },
          "Tip": {
            "type": "number",
            "format": "double"
          },
          "MinTip": {
            "type": "number",
            "format": "double"
          },
          "MaxTip": {
            "type": "number",
            "format": "double"
          },
          "BaseNightPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseNightPeriodsDto"
            },
            "nullable": true
          },
          "Service": {
            "$ref": "#/components/schemas/ServiceAreaTypeDto"
          }
        },
        "additionalProperties": false
      },
      "ServiceAreaTypeDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Icon": {
            "type": "string",
            "nullable": true
          },
          "Region": {
            "$ref": "#/components/schemas/RegionDto"
          },
          "Type": {
            "$ref": "#/components/schemas/ServiceBaseTypeDto"
          },
          "Params": {
            "$ref": "#/components/schemas/ServiceAreaParamsDto"
          },
          "Discount": {
            "$ref": "#/components/schemas/DiscountDto"
          },
          "Commission": {
            "$ref": "#/components/schemas/CommissionDto"
          }
        },
        "additionalProperties": false
      },
      "ServiceAreaTypeResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceBaseTypeDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "ServiceBaseTypeLanguages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceBaseTypeLanguageDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceBaseTypeLanguageDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Language": {
            "$ref": "#/components/schemas/LanguageDto"
          }
        },
        "additionalProperties": false
      },
      "ServiceDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Icon": {
            "type": "string",
            "nullable": true
          },
          "ServiceAreaTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceAreaTypeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StaticTypeEnum": {
        "enum": [
          "Daily",
          "Monthly"
        ],
        "type": "string"
      },
      "TaskDetailResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Price": {
            "type": "integer",
            "format": "int32"
          },
          "Tip": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "$ref": "#/components/schemas/TaskStatusEnum"
          },
          "Distance": {
            "type": "number",
            "format": "double"
          },
          "Duration": {
            "type": "number",
            "format": "double"
          },
          "PaymentType": {
            "$ref": "#/components/schemas/MemberPaymentTypeDto"
          },
          "Destination": {
            "$ref": "#/components/schemas/DestinationDto"
          },
          "Servant": {
            "$ref": "#/components/schemas/ServantResponse"
          },
          "Member": {
            "$ref": "#/components/schemas/MemberResponse"
          },
          "Origin": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "additionalProperties": false
      },
      "TaskDetailResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDetailResponse"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskStatusEnum": {
        "enum": [
          "Negatives",
          "Reserve",
          "Accept",
          "Arrive",
          "Start",
          "Stop",
          "EndDestination",
          "End"
        ],
        "type": "string"
      },
      "TasksDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "RequestId": {
            "type": "integer",
            "format": "int32"
          },
          "ServantId": {
            "type": "integer",
            "format": "int32"
          },
          "Price": {
            "type": "integer",
            "format": "int32"
          },
          "Tip": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "$ref": "#/components/schemas/TaskStatusEnum"
          },
          "Servant": {
            "$ref": "#/components/schemas/ServantDto"
          },
          "MemberPaymentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberPaymentTypeDto"
            },
            "nullable": true
          },
          "Members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberDto"
            },
            "nullable": true
          },
          "Destination": {
            "$ref": "#/components/schemas/DestinationDto"
          }
        },
        "additionalProperties": false
      },
      "TasksDtoPaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TasksDto"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "Ticks": {
            "type": "integer",
            "format": "int64"
          },
          "Days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Microseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Nanoseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "TotalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TotalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TotalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TotalMicroseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TotalNanoseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TotalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TotalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCancelReasonRequest": {
        "type": "object",
        "properties": {
          "CancelReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancelTranslationTitles"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateDiscountCodeRequest": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "number",
            "format": "double"
          },
          "Type": {
            "$ref": "#/components/schemas/DiscountCodeTypeEnum"
          },
          "Steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountCodeStepRequest"
            },
            "nullable": true
          },
          "CuRegionId": {
            "type": "integer",
            "format": "int32"
          },
          "UsageLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartAt": {
            "type": "string",
            "format": "date-time"
          },
          "ExpireAt": {
            "type": "string",
            "format": "date-time"
          },
          "IsHidden": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateFavoriteRequest": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Icon": {
            "type": "string",
            "nullable": true
          },
          "Lat": {
            "type": "number",
            "format": "double"
          },
          "Long": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UpdateServantRequest": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "NationalId": {
            "type": "string",
            "nullable": true
          },
          "CertificateId": {
            "type": "string",
            "nullable": true
          },
          "BankId": {
            "type": "string",
            "nullable": true
          },
          "CuRegionId": {
            "type": "integer",
            "format": "int32"
          },
          "ServiceAreaTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Avatar": {
            "type": "string",
            "nullable": true
          },
          "Certificate": {
            "type": "string",
            "nullable": true
          },
          "CertificateBack": {
            "type": "string",
            "nullable": true
          },
          "NationalCard": {
            "type": "string",
            "nullable": true
          },
          "NationalCardBack": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateServiceAreaTypeRequest": {
        "type": "object",
        "properties": {
          "Icon": {
            "type": "string",
            "nullable": true
          },
          "CuRegionId": {
            "type": "integer",
            "format": "int32"
          },
          "BaseTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Params": {
            "$ref": "#/components/schemas/BaseParams"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserProfileRequest": {
        "type": "object",
        "properties": {
          "DisplayName": {
            "type": "string",
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "description": "Gets User's mobile number.\r\nIf not available, null.",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Gets the user's email address, if available. Otherwise null.",
            "nullable": true
          },
          "PhotoUrl": {
            "type": "string",
            "description": "Gets the user's photo URL, if available. Otherwise null.",
            "nullable": true
          },
          "GenderId": {
            "type": "integer",
            "format": "int32"
          },
          "LanguageId": {
            "type": "integer",
            "format": "int32"
          },
          "CuRegionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "DisplayName": {
            "type": "string",
            "description": "Gets the user's display name, if available. Otherwise null.",
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "description": "Gets User's mobile number.\r\nIf not available, null.",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Gets the user's email address, if available. Otherwise null.",
            "nullable": true
          },
          "PhotoUrl": {
            "type": "string",
            "description": "Gets the user's photo URL, if available. Otherwise null.",
            "nullable": true
          },
          "EmailVerified": {
            "type": "boolean",
            "description": "Gets a value indicating whether the user's email address is verified or not."
          },
          "Disabled": {
            "type": "boolean",
            "description": "Gets a value indicating whether the user account is disabled or not."
          },
          "Roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "GenderId": {
            "type": "integer",
            "format": "int32"
          },
          "LanguageId": {
            "type": "integer",
            "format": "int32"
          },
          "CuRegionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRolesRequest": {
        "type": "object",
        "properties": {
          "RoleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateVehicleDetailReq": {
        "type": "object",
        "properties": {
          "Color": {
            "type": "string",
            "nullable": true
          },
          "Model": {
            "type": "integer",
            "format": "int32"
          },
          "Tip": {
            "type": "string",
            "nullable": true
          },
          "InsuranceNo": {
            "type": "string",
            "nullable": true
          },
          "InsuranceExpire": {
            "type": "string",
            "format": "date"
          },
          "Vin": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateVehicleRequest": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "nullable": true
          },
          "PlaqueDetail": {
            "$ref": "#/components/schemas/CreateOrUpdatePlaqueRequest"
          },
          "VehicleDetail": {
            "$ref": "#/components/schemas/UpdateVehicleDetailReq"
          },
          "CarCard": {
            "type": "string",
            "nullable": true
          },
          "CarCardBack": {
            "type": "string",
            "nullable": true
          },
          "TechDiagnosis": {
            "type": "string",
            "nullable": true
          },
          "Insurance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "Uid": {
            "type": "string",
            "description": "Gets the user ID of this user.",
            "nullable": true
          },
          "DisplayName": {
            "type": "string",
            "description": "Gets the user's display name, if available. Otherwise null.",
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "description": "Gets User's mobile number.\r\nIf not available, null.",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Gets the user's email address, if available. Otherwise null.",
            "nullable": true
          },
          "PhotoUrl": {
            "type": "string",
            "description": "Gets the user's photo URL, if available. Otherwise null.",
            "nullable": true
          },
          "EmailVerified": {
            "type": "boolean",
            "description": "Gets a value indicating whether the user's email address is verified or not."
          },
          "Disabled": {
            "type": "boolean",
            "description": "Gets a value indicating whether the user account is disabled or not."
          },
          "Roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDto"
            },
            "nullable": true
          },
          "Region": {
            "$ref": "#/components/schemas/RegionDto"
          },
          "Gender": {
            "$ref": "#/components/schemas/GenderDto"
          },
          "Language": {
            "$ref": "#/components/schemas/LanguageDto"
          },
          "Groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDtoPaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "Errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": {}
      },
      "VehicleDetailDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Color": {
            "type": "string",
            "nullable": true
          },
          "Tip": {
            "type": "string",
            "nullable": true
          },
          "Model": {
            "type": "integer",
            "format": "int32"
          },
          "InsuranceNo": {
            "type": "string",
            "nullable": true
          },
          "InsuranceExpire": {
            "type": "string",
            "format": "date"
          },
          "Vin": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VehicleDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "CarCard": {
            "type": "string",
            "nullable": true
          },
          "CarCardBack": {
            "type": "string",
            "nullable": true
          },
          "Insurance": {
            "type": "string",
            "nullable": true
          },
          "TechDiagnosis": {
            "type": "string",
            "nullable": true
          },
          "VehicleDetail": {
            "$ref": "#/components/schemas/VehicleDetailDto"
          },
          "PlaqueDetail": {
            "$ref": "#/components/schemas/PlaqueDetailDto"
          },
          "Servant": {
            "$ref": "#/components/schemas/ServantDto"
          }
        },
        "additionalProperties": false
      },
      "VehicleDtoPaginatedResponse": {
        "type": "object",
        "properties": {
          "RemainingItems": {
            "type": "integer",
            "description": "Gets the remaining items in the paginated data.",
            "format": "int64",
            "readOnly": true
          },
          "Count": {
            "type": "integer",
            "description": "Gets the total count of the items in the data.",
            "format": "int64"
          },
          "Page": {
            "type": "integer",
            "description": "Gets the page index of the current pagination.",
            "format": "int32",
            "readOnly": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets the total items per page limit.",
            "format": "int32",
            "readOnly": true
          },
          "Metadata": {
            "description": "Gets the metadata.",
            "nullable": true,
            "readOnly": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleDto"
            },
            "description": "Gets the items in the current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "description": "Access Token",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ]
}